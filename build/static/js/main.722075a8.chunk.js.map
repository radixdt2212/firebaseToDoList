{"version":3,"sources":["fireBaseSetup.js","components/FormAdd.js","components/Task.js","components/TaskList.js","components/Toasty.js","components/ListIsEmpty.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","FormAdd","setTaskValue","handleChange","setDataValue","title","loading","dangerClassTitle","dangerClassTask","task","className","style","border","fontWeight","size","type","aria-label","placeholder","aria-describedby","value","required","maxLength","onChange","resize","rows","onClick","role","height","width","Task","item","index","deleteElement","borderRadius","background","color","TaskList","taskList","dataLoading","map","Toasty","msg","aria-live","aria-atomic","delay","position","data-bs-dismiss","ListIsEmpty","aria-valuenow","aria-valuemin","aria-valuemax","firebase","apps","length","initializeApp","App","useState","setTask","setTitle","setLoading","setTaskList","setDangerTitleClass","setDangerTaskClass","toastMsg","setToastMsg","setDataLoading","firebaseSetValue","ref","key","database","set","then","doc","setTaskListData","bootstrap","Toast","document","querySelector","show","triggerToast","catch","error","console","log","once","snapshot","Data","val","React","useEffect","e","target","preventDefault","itemTitle","data","hasOwnProperty","toDoList","addTodo","ID","splice","parseInt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.722075a8.chunk.js","sourcesContent":["const firebaseConfig = {\r\n  apiKey: \"AIzaSyBjtM6tPuuUX4Z9kuLUKkxhqTZpNI66zBs\",\r\n  authDomain: \"rxreactdemo.firebaseapp.com\",\r\n  projectId: \"rxreactdemo\",\r\n  storageBucket: \"rxreactdemo.appspot.com\",\r\n  messagingSenderId: \"893313321463\",\r\n  appId: \"1:893313321463:web:537dcef760395116bb06f2\",\r\n  measurementId: \"G-K9JLQVFSPP\",\r\n};\r\n// Initialize Firebase\r\n\r\nexport default firebaseConfig;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FcTodoList } from \"react-icons/fc\";\r\nexport const FormAdd = ({\r\n  setTaskValue,\r\n  handleChange,\r\n  setDataValue,\r\n  title,\r\n  loading,\r\n  dangerClassTitle,\r\n  dangerClassTask,\r\n  task,\r\n}) => {\r\n  return (\r\n    <>\r\n      <form>\r\n        <div className=\"container-fluid \">\r\n          <div\r\n            className=\" card-body card-header my-5 mx-5 shadow rounded\"\r\n            style={{ border: \"none\" }}\r\n          >\r\n            <div className=\"row no-gutters justify-content-center\">\r\n              <div className=\"col-4 text-center\">\r\n                <h3\r\n                  className=\"btn btn-light btn-lg w-100 card-body \"\r\n                  style={{ fontWeight: \"bold\" }}\r\n                >\r\n                  <FcTodoList size={35} /> <br />\r\n                  Add Task\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-12 mt-3 mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={`form-control ${dangerClassTitle && \"is-invalid\"}`}\r\n                  aria-label=\"Sizing example input\"\r\n                  placeholder=\"Task Title (Max 50 Char.)\"\r\n                  aria-describedby=\"inputGroup-sizing-default\"\r\n                  value={title}\r\n                  required\r\n                  maxLength=\"50\"\r\n                  onChange={setDataValue}\r\n                />\r\n                <div className=\"invalid-feedback\">\r\n                  Please Enter proper Title.\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 mt-3 mb-3\">\r\n                <textarea\r\n                  type=\"text\"\r\n                  className={`form-control ${dangerClassTask && \"is-invalid\"}`}\r\n                  aria-label=\"Sizing example input\"\r\n                  placeholder=\"Task Description (Max 100 Char.)\"\r\n                  aria-describedby=\"inputGroup-sizing-default\"\r\n                  style={{ resize: \"none\" }}\r\n                  rows=\"3\"\r\n                  maxLength=\"100\"\r\n                  value={task}\r\n                  required\r\n                  onChange={setTaskValue}\r\n                ></textarea>\r\n                <div className=\"invalid-feedback\">\r\n                  Please Enter proper task.\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 mt-3 mb-3\">\r\n                <button\r\n                  className=\"btn btn-success w-100\"\r\n                  type=\"submit\"\r\n                  onClick={handleChange}\r\n                >\r\n                  Submit{\" \"}\r\n                  {loading && (\r\n                    <div\r\n                      className=\"spinner-border text-primary relax\"\r\n                      role=\"status\"\r\n                      style={{ height: \"1rem\", width: \"1rem\" }}\r\n                    >\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { RiDeleteBack2Fill } from \"react-icons/ri\";\r\nexport const Task = ({ item, index, deleteElement }) => {\r\n  return (\r\n    <>\r\n      <li\r\n        className=\"list-group-item d-flex justify-content-between align-items-start mx-2 my-2 shadow-sm bg-white rounded taskItem\"\r\n        style={{ borderRadius: \"9px\" }}\r\n      >\r\n        <div className=\"ms-2 me-auto\">\r\n          <div className=\"fw-bold text-wrap\">{item.title}</div>\r\n          <span className=\"badge bg-primary cornered-pill text-wrap\">{item.task}</span>\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          style={{\r\n            border: \"none\",\r\n            background: \"transparent\",\r\n          }}\r\n          onClick={() => deleteElement(index)}\r\n        >\r\n          <RiDeleteBack2Fill size={45} color={\"#332e2ebc\"} />\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Task } from \"./Task\";\r\nexport const TaskList = ({ taskList, deleteElement, dataLoading }) => {\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div\r\n          className=\" card-body card-header my-5 mx-5\"\r\n          style={{ border: \"none\" }}\r\n        >\r\n          <div className=\"row no-gutters justify-content-center\">\r\n            <div className=\"col-12\">\r\n              {dataLoading ? (\r\n                <div className=\"row justify-content-center\">\r\n                  <div className=\"col-12 col-lg-4 col-8 text-center\">\r\n                    <div className=\"spinner-grow text-info\" role=\"status\">\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                    &nbsp;&nbsp;\r\n                    <div className=\"spinner-border text-primary\" role=\"status\">\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                    &nbsp;&nbsp;\r\n                    <div className=\"spinner-grow text-info\" role=\"status\">\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <ol className=\"list-group list-group-numbered\">\r\n                  {taskList.map((item, index) => {\r\n                    return (\r\n                      <Task\r\n                        deleteElement={deleteElement}\r\n                        item={item}\r\n                        index={index}\r\n                        key={index}\r\n                      />\r\n                    );\r\n                  })}\r\n                </ol>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Toasty = ({ msg }) => {\r\n  return (\r\n    <>\r\n      <div className=\"row no-gutters justify-content-center\">\r\n        <div className=\"col-4\">\r\n          <div\r\n            className=\"toast align-items-center text-white bg-primary border-0 w-100\"\r\n            role=\"alert\"\r\n            aria-live=\"assertive\"\r\n            aria-atomic=\"true\"\r\n            delay=\"100\"\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            <div className=\"d-flex text-center align-items-center w-100\">\r\n              <div className=\"toast-body\">{msg}</div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close btn-close-white me-2 m-auto\"\r\n                data-bs-dismiss=\"toast\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { CgSmileSad } from \"react-icons/cg\";\r\nexport const ListIsEmpty = () => {\r\n  return (\r\n    <>\r\n      <br />\r\n      <div className=\"row justify-content-center container-fluid\">\r\n        <div className=\"col-12 col-md-8 col-lg-4 text-center\">\r\n          <div className=\"progress w-100\" style={{ height: \"4.5rem\" }}>\r\n            <div\r\n              className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n              role=\"progressbar\"\r\n              aria-valuenow=\"100\"\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <h1>\r\n                Task list is empty <CgSmileSad color={\"#fff\"} />\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\n\n// *** Firebase setup ***\nimport firebaseConfig from \"./fireBaseSetup\";\nimport firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\n// *** Bootstrap setup ***\nimport bootstrap from \"bootstrap/dist/js/bootstrap\";\n\n// *** Components setup ***\nimport { FormAdd } from \"./components/FormAdd\";\nimport { TaskList } from \"./components/TaskList\";\nimport { Toasty } from \"./components/Toasty\";\nimport { ListIsEmpty } from \"./components/ListIsEmpty\";\n\n// Initialize Firebase\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nfunction App() {\n  // State Hooks\n  const [task, setTask] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n  const [dangerClassTitle, setDangerTitleClass] = useState(false);\n  const [dangerClassTask, setDangerTaskClass] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n  const [dataLoading, setDataLoading] = useState(true);\n  // FireBase Methods\n  function addTodo(itemTitle, task) {\n    if (itemTitle && task) {\n      if (itemTitle.length < 51 && task.length < 101) {\n        setDangerTaskClass(false);\n        setDangerTitleClass(false);\n        setLoading(true);\n        firebase\n          .database()\n          .ref()\n          .once(\"value\")\n          .then((snapshot) => {\n            let data = snapshot.val();\n            let value = {\n              title: itemTitle,\n              task,\n            };\n            if (data !== null)\n              if (data.hasOwnProperty(\"toDoList\")) {\n                if (data.toDoList.task.length > 0) {\n                  data.toDoList.task = [...data.toDoList.task, value];\n                  firebaseSetValue(\n                    \"toDoList\",\n                    \"task\",\n                    data.toDoList.task,\n                    \"Task created Successfully\"\n                  );\n                } else {\n                  let data = [value];\n                  firebaseSetValue(\n                    \"toDoList\",\n                    \"task\",\n                    data,\n                    \"Task created Successfully\"\n                  );\n                }\n              } else {\n                let data = [value];\n                firebaseSetValue(\n                  \"toDoList\",\n                  \"task\",\n                  data,\n                  \"Task created Successfully\"\n                );\n              }\n            else {\n              let data = [value];\n              firebaseSetValue(\n                \"toDoList\",\n                \"task\",\n                data,\n                \"Task created Successfully\"\n              );\n            }\n          });\n      } else {\n        if (!task) setDangerTaskClass(true);\n        else setDangerTaskClass(false);\n        if (!itemTitle) setDangerTitleClass(true);\n        else setDangerTitleClass(false);\n      }\n    } else {\n      if (!task) setDangerTaskClass(true);\n      else setDangerTaskClass(false);\n      if (!itemTitle) setDangerTitleClass(true);\n      else setDangerTitleClass(false);\n    }\n  }\n  function deleteElement(ID) {\n    firebase\n      .database()\n      .ref(\"toDoList/task\")\n      .once(\"value\")\n      .then((snapshot) => {\n        let Data = snapshot.val();\n        Data.splice(ID, 1);\n        firebaseSetValue(\n          \"toDoList\",\n          \"task\",\n          Data,\n          `Task #${parseInt(ID + 1)} deleted Successfully`\n        );\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  function firebaseSetValue(ref, key, value, msg) {\n    firebase\n      .database()\n      .ref(ref)\n      .set({\n        [key]: value,\n      })\n      .then((doc) => {\n        setTask(\"\");\n        setTitle(\"\");\n        setTaskListData(ref + \"/\" + key);\n        setLoading(false);\n        triggerToast(msg);\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(\"this is firebaseSetValue: \" + error);\n      });\n  }\n\n  // Functional Methods\n  function triggerToast(msg) {\n    setToastMsg(msg);\n    let x = new bootstrap.Toast(document.querySelector(\".toast\"));\n    x.show();\n  }\n  function setTaskListData(ref) {\n    setDataLoading(true);\n    firebase\n      .database()\n      .ref(ref)\n      .once(\"value\")\n      .then((snapshot) => {\n        let Data = snapshot.val();\n        setDataLoading(false);\n        setTaskList(Data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  // Event Methods\n  function handleChange(e) {\n    e.preventDefault();\n    addTodo(title, task);\n  }\n  const setTaskValue = (e) => {\n    setTask(e.target.value);\n  };\n  const setDataValue = (e) => {\n    setTitle(e.target.value);\n  };\n  React.useEffect(() => {\n    setTaskListData(\"toDoList/task\");\n  }, []);\n\n  return (\n    <>\n      <FormAdd\n        setTaskValue={setTaskValue}\n        setDataValue={setDataValue}\n        task={task}\n        handleChange={handleChange}\n        title={title}\n        loading={loading}\n        dangerClassTitle={dangerClassTitle}\n        dangerClassTask={dangerClassTask}\n      />\n      <Toasty msg={toastMsg} />\n      {taskList ? (\n        <TaskList\n          taskList={taskList}\n          deleteElement={deleteElement}\n          dataLoading={dataLoading}\n        />\n      ) : (\n        <ListIsEmpty />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}